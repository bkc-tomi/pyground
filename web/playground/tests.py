from pyground.tests import CommonTestCase
from django.urls    import reverse


# モデル
from bookmark.models   import Bookmark
from friend.models     import Follow, Permit
from playground.models import Code
from question.models   import Question, Correcter
from user.models       import User, Profile

# templateのあるviewのみテスト
# POST処理等は取りあえすしない

class IndexViewTest(CommonTestCase):
    """
    ----------------------------------------------------------------------
    プレイグランド／プレイグランド
    ----------------------------------------------------------------------
    """

    def test_redirect(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        ユーザーがログインしてない状態でのリダイレクト

        ** 入力値 **
        login_user
        ** 期待値 **
        リダイレクト先: top:top
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------
        response = self.client.get(reverse('playground:index'))

        # テスト ---------------------------------------------------
        self.assertRedirects(
            response,
            expected_url=reverse('top:top'),
            status_code=302,
            target_status_code=200,
        )

class RunViewTest(CommonTestCase):
    """
    ----------------------------------------------------------------------
    プレイグランド／実行処理
    ----------------------------------------------------------------------
    """
    def test_run(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        正当な入力コードに対して、適当な実行結果を返すかどうか
        ** 入力値 **
        
        ** 期待値 **
        
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------

        # テスト ---------------------------------------------------


    def test_redirect(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        ユーザーがログインしてない状態でのリダイレクト

        ** 入力値 **
        login_user
        ** 期待値 **
        リダイレクト先: top:top
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------
        response = self.client.get(reverse('playground:run'))

        # テスト ---------------------------------------------------
        self.assertRedirects(
            response,
            expected_url=reverse('top:top'),
            status_code=302,
            target_status_code=200,
        )

class EditViewTest(CommonTestCase):
    """
    ----------------------------------------------------------------------
    プレイグランド／コード編集
    ----------------------------------------------------------------------
    """

    def test_show_edit(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        DBから該当コードを取得し表示できるかどうか
        ** 入力値 **
        
        ** 期待値 **
        
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------

        # テスト ---------------------------------------------------

    def test_show_with_no_code(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        code_idで指定された問題が存在しない時エラーページに飛ぶか
        ** 入力値 **
        
        ** 期待値 **
        
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------

        # テスト ---------------------------------------------------

    def test_redirect(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        ユーザーがログインしてない状態でのリダイレクト

        ** 入力値 **
        login_user
        ** 期待値 **
        リダイレクト先: top:top
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------
        u = self.make_user('u1', 'a@b.jp', '0000')
        c = self.make_code(u.id, 'code1')

        # 実行 -----------------------------------------------------
        response = self.client.get(reverse('playground:edit', args=(c.id, )))

        # テスト ---------------------------------------------------
        self.assertRedirects(
            response,
            expected_url=reverse('top:top'),
            status_code=302,
            target_status_code=200,
        )

class RunEditViewTest(CommonTestCase):
    """
    ----------------------------------------------------------------------
    プレイグランド／編集実行処理
    ----------------------------------------------------------------------
    """
    def test_run_eidt(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        正当なコードに対して、適切な実行結果を返せるかどうか
        ** 入力値 **
        
        ** 期待値 **
        
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------

        # テスト ---------------------------------------------------

    def test_redirect(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        ユーザーがログインしてない状態でのリダイレクト

        ** 入力値 **
        login_user
        ** 期待値 **
        リダイレクト先: top:top
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------
        u = self.make_user('u1', 'a@b.jp', '0000')
        c = self.make_code(u.id, 'code1')
        
        # 実行 -----------------------------------------------------
        response = self.client.get(reverse('playground:run_edit', args=(c.id, )))

        # テスト ---------------------------------------------------
        self.assertRedirects(
            response,
            expected_url=reverse('top:top'),
            status_code=302,
            target_status_code=200,
        )

class QuestionViewTest(CommonTestCase):
    """
    ----------------------------------------------------------------------
    プレイグランド／問題ページ
    ----------------------------------------------------------------------
    """
    def test_show_question(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        指定された問題を取得し表示できるかどうか
        ** 入力値 **
        
        ** 期待値 **
        
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------

        # テスト ---------------------------------------------------

    def test_show_with_no_question_id(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        question_idで指定された問題が存在しない時エラーページに飛ぶか
        ** 入力値 **
        
        ** 期待値 **
        
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------

        # テスト ---------------------------------------------------

    def test_redirect(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        ユーザーがログインしてない状態でのリダイレクト

        ** 入力値 **
        login_user
        ** 期待値 **
        リダイレクト先: top:top
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------
        u = self.make_user('u1', 'a@b.jp', '0000')
        q = self.make_question(1, u.id)

        # 実行 -----------------------------------------------------
        response = self.client.get(reverse('playground:question', args=(q.id, )))

        # テスト ---------------------------------------------------
        self.assertRedirects(
            response,
            expected_url=reverse('top:top'),
            status_code=302,
            target_status_code=200,
        )

class RunQuestionViewTest(CommonTestCase):
    """
    ----------------------------------------------------------------------
    プレイグランド／問題処理
    ----------------------------------------------------------------------
    """
    def test_true_judge(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        正解の場合の処理が正しくなされるかどうか
        ** 入力値 **
        
        ** 期待値 **
        
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------

        # テスト ---------------------------------------------------

    def test_false_judge(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        不正解の場合の処理が正しくなされるかどうか
        ** 入力値 **
        
        ** 期待値 **
        
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------

        # テスト ---------------------------------------------------

    def test_redirect(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        ユーザーがログインしてない状態でのリダイレクト

        ** 入力値 **
        login_user
        ** 期待値 **
        リダイレクト先: top:top
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------
        u = self.make_user('u1', 'a@b.jp', '0000')
        q = self.make_question(1, u.id)

        # 実行 -----------------------------------------------------
        response = self.client.get(reverse('playground:run_question', args=(q.id, )))

        # テスト ---------------------------------------------------
        self.assertRedirects(
            response,
            expected_url=reverse('top:top'),
            status_code=302,
            target_status_code=200,
        )

class SaveViewTest(CommonTestCase):
    """
    ----------------------------------------------------------------------
    プレイグランド／保存処理
    ----------------------------------------------------------------------
    """
    def test_save(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        保存が正しくなされるかどうか
        ** 入力値 **
        
        ** 期待値 **
        
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------

        # テスト ---------------------------------------------------

    def test_redirect(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        ユーザーがログインしてない状態でのリダイレクト

        ** 入力値 **
        login_user
        ** 期待値 **
        リダイレクト先: top:top
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------
        response = self.client.get(reverse('playground:save'))

        # テスト ---------------------------------------------------
        self.assertRedirects(
            response,
            expected_url=reverse('top:top'),
            status_code=302,
            target_status_code=200,
        )

class UpdateViewTest(CommonTestCase):
    """
    ----------------------------------------------------------------------
    プレイグランド／更新処理
    ----------------------------------------------------------------------
    """
    def test_update(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        コードの変更が正しくなされるかどうか
        ** 入力値 **
        
        ** 期待値 **
        
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------

        # 実行 -----------------------------------------------------

        # テスト ---------------------------------------------------

    def test_redirect(self):
        """
        ----------------------------------------------------------------
        ** テスト内容 **
        ユーザーがログインしてない状態でのリダイレクト

        ** 入力値 **
        login_user
        ** 期待値 **
        リダイレクト先: top:top
        ----------------------------------------------------------------
        """
        # データ作成 ------------------------------------------------
        u = self.make_user('u1', 'a@b.jp', '0000')
        c = self.make_code(u.id, 'code')

        # 実行 -----------------------------------------------------
        response = self.client.get(reverse('playground:update', args=(c.id, )))

        # テスト ---------------------------------------------------
        self.assertRedirects(
            response,
            expected_url=reverse('top:top'),
            status_code=302,
            target_status_code=200,
        )