import logging

from django.shortcuts import render
from django.urls      import reverse
from django.http      import HttpResponse, HttpResponseRedirect

from .models           import User, Profile
from playground.models import Code
from friend.models     import Follow

"""
----------------------------------------------------------------------
ユーザー／登録ページ
----------------------------------------------------------------------
"""
def register(request):
    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return render(request, "user/register.html")

"""
----------------------------------------------------------------------
ユーザー／登録完了ページ　★未実装
----------------------------------------------------------------------
"""
def register_complete(request):
    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return render(request, "user/register_complete.html")

"""
----------------------------------------------------------------------
ユーザー／登録処理
----------------------------------------------------------------------
"""
def run_register(request):
    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """
    post_dict = {
        'username': request.POST['username'],
        'email'   : request.POST['email'],
        'password': request.POST['password'],
        'check'   : request.POST['check'],
    }

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """
    # 未入力
    empty_list = ''
    for key, value in post_dict.items():
        if value == '':
            empty_list += ', ' + str(key)
        
    if empty_list != '':
        print('未入力項目:' + str(empty_list))
        return HttpResponseRedirect(reverse('user:register'))

    # passwordのチェック
    if post_dict['password'] != post_dict['check']:
        print('パスワードと確認用が異なります。')
        return HttpResponseRedirect(reverse('user:register'))
    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """
    try:
        user = User(
            username = post_dict['username'],
            email    = post_dict['email'],
            password = post_dict['password'],
        )
        user.save()

    except:
        print('データベース登録エラー')
        return HttpResponseRedirect(reverse('user:register'))

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """
    

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return HttpResponseRedirect(reverse('user:register_complete'))

"""
----------------------------------------------------------------------
ユーザー／ログインページ
----------------------------------------------------------------------
"""
def login(request):
    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """
    

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """
    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return render(request, "user/login.html")

"""
----------------------------------------------------------------------
ユーザー／ログイン処理
----------------------------------------------------------------------
"""
def run_login(request):
    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """
    login_user = {
        'id'      : '',
        'username': '',
    }

    post_dict = {
        'email'   : request.POST['email'],
        'password': request.POST['password'],
    }
    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """
    # 未入力
    empty_list = ''
    for key, value in post_dict.items():
        if value == '':
            empty_list += ', ' + str(key)
        
    if empty_list != '':
        print('未入力項目:' + str(empty_list))
        return HttpResponseRedirect(reverse('user:login'))

    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """
    # データ取得
    user_list = User.objects.filter(
        email = post_dict['email'],
        password = post_dict['password']
    )

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """
    # ユーザーデータ作成
    login_user['id']       = user_list[0].id
    login_user['username'] = user_list[0].username
    print(login_user)
    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """
    
    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    if login_user:
        # ログイン成功
        request.session['login_user'] = login_user
        return HttpResponseRedirect(reverse('user:detail', args=(login_user['id'],)))
    else:
        # ログイン失敗
        return HttpResponseRedirect(reverse('user:login'))
    
"""
----------------------------------------------------------------------
ユーザー／ログアウト処理　★未実装
----------------------------------------------------------------------
"""
def run_logout(request, user_id):
    """
    ---------------------------------------------------------
    セッション
    ---------------------------------------------------------
    """
    if 'login_user' not in request.session:
        return HttpResponseRedirect(reverse('top:top'))
    
    login_user = request.session['login_user']

    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """
    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """
    # ログアウト処理
    try:
        del request.session['login_user']
    except KeyError:
        pass
    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return HttpResponseRedirect(reverse('top:top'))

"""
----------------------------------------------------------------------
ユーザー／退会ページ　★未実装
----------------------------------------------------------------------
"""
def withdrawal(request, user_id):
    """
    ---------------------------------------------------------
    セッション
    ---------------------------------------------------------
    """
    if 'login_user' not in request.session:
        return HttpResponseRedirect(reverse('top:top'))
    
    login_user = request.session['login_user']

    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """
    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return render(request, "user/withdrawal.html", {
        'user_id': user_id,
    })

"""
----------------------------------------------------------------------
ユーザー／退会処理　★未実装
----------------------------------------------------------------------
"""
def run_withdrawal(request, user_id):
    """
    ---------------------------------------------------------
    セッション
    ---------------------------------------------------------
    """
    if 'login_user' not in request.session:
        return HttpResponseRedirect(reverse('top:top'))
    
    login_user = request.session['login_user']

    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """
    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return HttpResponseRedirect(reverse('top:top'))

"""
----------------------------------------------------------------------
ユーザー／プロフィール詳細ページ　 ★未実装
----------------------------------------------------------------------
"""
def detail(request, user_id):
    """
    ---------------------------------------------------------
    セッション
    ---------------------------------------------------------
    """
    if 'login_user' not in request.session:
        return HttpResponseRedirect(reverse('top:top'))
    
    login_user = request.session['login_user']

    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """
    profile = {
        'id'          : '',
        'image_icon'  : {},
        'username'    : '',
        'email'       : '',
        'password'    : '',
        'profile_text': '',
        'publish'     : '',
    }
    follow_num   = 0
    follower_num = 0
    is_follow    = False
    is_me        = False
    codes        = {}

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """
    # ユーザーの取得
    temp = ''
    try:
        temp = User.objects.get(pk=user_id)

    except User.DoesNotExist:
        raise Http404("User does not exist")

    profile['id']         = temp.id
    profile['username']   = temp.username
    profile['email']      = temp.email
    profile['image_icon'] = temp.image_icon
    

    # プロフィールの取得
    temp = ''
    try:
        temp = Profile.objects.filter(target_user_id=user_id)[0:1]

    except Profile.DoesNotExist:
        raise Http404("Profile does not exist")
    
    if len(temp) > 0:
        temp2 = temp[0]
        profile['profile_text'] = temp2.profile_text
        profile['publish']      = temp2.publish

    # コードの取得
    try:
        codes = Code.objects.filter(target_user_id=user_id)

    except Code.DoesNotExist:
        raise Http404("Code does not exist")

    # フォロー数の取得
    try:
        follow_num = Follow.objects.filter(follow_user_id=user_id).count()

    except Code.DoesNotExist:
        raise Http404("Follow does not exist")
    
    # フォロワー数の取得
    try:
        follower_num = Follow.objects.filter(followed_user_id=user_id).count()

    except Code.DoesNotExist:
        raise Http404("Follow does not exist")

    # フォローしているかどうかの判定
    temp = ''
    try:
        temp = Follow.objects.filter(follow_user_id=login_user['id'], followed_user_id=user_id)

    except Code.DoesNotExist:
        raise Http404("Follow does not exist")
    
    if temp:
        is_follow = True

    # ログインユーザーの判定
    if profile['id'] == login_user['id']:
        is_me = True

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return render(request, "user/detail.html", {
        'profile'     : profile,
        'codes'       : codes,
        'follow_num'  : follow_num,
        'follower_num': follower_num,
        'is_follow'   : is_follow,
        'is_me'       : is_me,
    })

"""
----------------------------------------------------------------------
ユーザー／プロフィール新規作成ページ　★未実装
----------------------------------------------------------------------
"""
def create(request):
    """
    ---------------------------------------------------------
    セッション
    ---------------------------------------------------------
    """
    if 'login_user' not in request.session:
        return HttpResponseRedirect(reverse('top:top'))
    
    login_user = request.session['login_user']

    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """
    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return render(request, "user/create.html")

"""
----------------------------------------------------------------------
ユーザー／プロフィール新規作成処理　★未実装
----------------------------------------------------------------------
"""
def run_create(request):
    """
    ---------------------------------------------------------
    セッション
    ---------------------------------------------------------
    """
    if 'login_user' not in request.session:
        return HttpResponseRedirect(reverse('top:top'))
    
    login_user = request.session['login_user']

    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """
    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return HttpResponseRedirect(reverse('user:detail', args=(1,)))

"""
----------------------------------------------------------------------
ユーザー／プロフィール編集ページ
----------------------------------------------------------------------
"""
def edit(request, user_id):
    """
    ---------------------------------------------------------
    セッション
    ---------------------------------------------------------
    """
    if 'login_user' not in request.session:
        return HttpResponseRedirect(reverse('top:top'))
    
    login_user = request.session['login_user']

    """
    ---------------------------------------------------------
    セッション
    ---------------------------------------------------------
    """
    if 'login_user' not in request.session:
        return HttpResponseRedirect(reverse('top:top'))
    
    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """
    profile = {
        'id'          : '',
        'image_icon'  : {},
        'username'    : '',
        'password'    : '',
        'profile_text': '',
        'publish'     : '',
    }

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """
    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """
    
    # ユーザーの取得
    try:
        temp = User.objects.get(pk=user_id)

    except User.DoesNotExist:
        raise Http404("User does not exist")

    profile['id']         = temp.id
    profile['username']   = temp.username
    profile['password']   = temp.password
    profile['image_icon'] = temp.image_icon
    

    # プロフィールの取得
    try:
        temp = Profile.objects.filter(target_user_id=user_id)[0:1]

    except User.DoesNotExist:
        raise Http404("User does not exist")
    
    if len(temp) > 0:
        temp2 = temp[0]
        profile['profile_text'] = temp2.profile_text
        profile['publish']      = temp2.publish

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return render(request, "user/edit.html", {
        'profile': profile,
    })

"""
----------------------------------------------------------------------
ユーザー／プロフィール編集処理　★未実装
----------------------------------------------------------------------
"""
def run_edit(request, user_id):
    """
    ---------------------------------------------------------
    セッション
    ---------------------------------------------------------
    """
    if 'login_user' not in request.session:
        return HttpResponseRedirect(reverse('top:top'))
    
    login_user = request.session['login_user']

    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """
    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return HttpResponseRedirect(reverse('user:detail', args=(user_id,)))

"""
----------------------------------------------------------------------
ユーザー／ユーザー一覧ページ
----------------------------------------------------------------------
"""
def index(request):
    """
    ---------------------------------------------------------
    セッション
    ---------------------------------------------------------
    """
    if 'login_user' not in request.session:
        return HttpResponseRedirect(reverse('top:top'))
    
    login_user = request.session['login_user']
    
    """
    ---------------------------------------------------------
    初期値・値取得
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    バリデーション
    ---------------------------------------------------------
    """
    """
    ---------------------------------------------------------
    前処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    データベース保存
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    後処理
    ---------------------------------------------------------
    """

    """
    ---------------------------------------------------------
    描画データ取得
    ---------------------------------------------------------
    """
    user_list = User.objects.all()
    print(user_list)

    """
    ---------------------------------------------------------
    ページ遷移
    ---------------------------------------------------------
    """
    return render(request, "user/index.html", {
        'user_list': user_list,
    })